[
  {
    "class" : "StreamDensityBasedAL",
    "package" : "stream",
    "method" : "StreamDensityBasedAL Sampling",
    "category" : "Density Sampling",
    "template" : "examples/template_stream.py",
    "tags" : ["stream",  "classification", "single-annotator"],
    "title" : "Density Sampling with StreamDensityBasedAL",
    "refs" : ["ienco2014density"],
    "sequence" : ["title", "text_0", "plot", "refs"],
    "text_0" : "",
    "import_misc" : "from skactiveml.stream import StreamDensityBasedAL",
    "init_qs" : "StreamDensityBasedAL(budget=0.2)",
    "query_params" : "candidates=X_cand, clf=clf",
    "update_params" : "candidates=X_cand, queried_indices=sampled_indices"
  },
  {
    "class" : "CognitiveDualQueryStrategyRan",
    "package" : "stream",
    "method" : "CognitiveDualQueryStrategyRan Uncertainty Sampling",
    "category" : "Density Sampling",
    "template" : "examples/template_stream.py",
    "tags" : ["stream",  "classification", "single-annotator"],
    "title" : "Density Sampling with CognitiveDualQueryStrategyRan",
    "refs" : ["liu2023active"],
    "sequence" : ["title", "text_0", "plot", "refs"],
    "text_0" : "",
    "import_misc" : "from skactiveml.stream import CognitiveDualQueryStrategyRan",
    "init_qs" : "CognitiveDualQueryStrategyRan(budget=0.2)",
    "query_params" : "candidates=X_cand, clf=clf",
    "update_params" : "candidates=X_cand, queried_indices=sampled_indices"
  },
  {
    "class" : "CognitiveDualQueryStrategyFixUn",
    "package" : "stream",
    "method" : "CognitiveDualQueryStrategyFixUn Uncertainty Sampling",
    "category" : "Density Sampling",
    "template" : "examples/template_stream.py",
    "tags" : ["stream",  "classification", "single-annotator"],
    "title" : "Density Sampling with CognitiveDualQueryStrategyFixUn",
    "refs" : ["liu2023active"],
    "sequence" : ["title", "text_0", "plot", "refs"],
    "text_0" : "",
    "import_misc" : "from skactiveml.stream import CognitiveDualQueryStrategyFixUn",
    "init_qs" : "CognitiveDualQueryStrategyFixUn(budget=0.2)",
    "query_params" : "candidates=X_cand, clf=clf",
    "update_params" : "candidates=X_cand, queried_indices=sampled_indices"
  },
  {
    "class" : "CognitiveDualQueryStrategyVarUn",
    "package" : "stream",
    "method" : "CognitiveDualQueryStrategyVarUn Uncertainty Sampling",
    "category" : "Density Sampling",
    "template" : "examples/template_stream.py",
    "tags" : ["stream",  "classification", "single-annotator"],
    "title" : "Density Sampling with CognitiveDualQueryStrategyVarUn",
    "refs" : ["liu2023active"],
    "sequence" : ["title", "text_0", "plot", "refs"],
    "text_0" : "",
    "import_misc" : "from skactiveml.stream import CognitiveDualQueryStrategyVarUn",
    "init_qs" : "CognitiveDualQueryStrategyVarUn(budget=0.2)",
    "query_params" : "candidates=X_cand, clf=clf",
    "update_params" : "candidates=X_cand, queried_indices=sampled_indices"
  },
  {
    "class" : "CognitiveDualQueryStrategyRanVarUn",
    "package" : "stream",
    "method" : "CognitiveDualQueryStrategyRanVarUn Uncertainty Sampling",
    "category" : "Density Sampling",
    "template" : "examples/template_stream.py",
    "tags" : ["stream",  "classification", "single-annotator"],
    "title" : "Density Sampling with CognitiveDualQueryStrategyRanVarUn",
    "refs" : ["liu2023active"],
    "sequence" : ["title", "text_0", "plot", "refs"],
    "text_0" : "",
    "import_misc" : "from skactiveml.stream import CognitiveDualQueryStrategyRanVarUn",
    "init_qs" : "CognitiveDualQueryStrategyRanVarUn(budget=0.2)",
    "query_params" : "candidates=X_cand, clf=clf",
    "update_params" : "candidates=X_cand, queried_indices=sampled_indices"
  }
]